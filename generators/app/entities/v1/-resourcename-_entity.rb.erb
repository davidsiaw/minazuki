# frozen_string_literal: true

module V1
  # Entity for exposing one <%= name.to_s.camelize %>
  class <%= name.to_s.camelize %>Entity < Grape::Entity
    root '<%= name.to_s.pluralize %>', '<%= name.to_s %>'
    expose :id
    <% resource.fields.each do |field_name, field| %>
    <%   if %i[string integer].include? field[:type] %>
    expose :<%= field_name %>
    <%   else %>
    expose :<%= field_name %>, using: <%= field[:type].to_s.camelize %>Entity
    <%   end %>
    <% end %>

    <% resource.parent_fields.each do |parent, fields| %>
    # Inherited from <%= parent %>
    <% fields.each do |field_name, field| %>
    <%   if %i[string integer].include? field[:type] %>
    expose :<%= field_name %>
    <%   else %>
    expose :<%= field_name %>, using: <%= field[:type].to_s.camelize %>Entity
    <%   end %>
    <% end -%>
    <% end -%>
    expose :updated_at
    expose :created_at

    # Collection documentation class
    class <%= name.to_s.camelize %>CollectionDocumentation < Grape::Entity
      expose :<%= name.to_s.pluralize %>,
             using: <%= name.to_s.camelize %>Entity,
             documentation: {
               desc: 'collection of <%= name.to_s.pluralize %>,',
               param_type: '<%= name.to_s.pluralize %>,',
               is_array: true
             }
    end

    # Singular documentation class
    class <%= name.to_s.camelize %>Documentation < Grape::Entity
      expose :<%= name %>,
             using: <%= name.to_s.camelize %>Entity,
             documentation: {
               desc: '<%= name %>',
               param_type: '<%= name.to_s.pluralize %>,',
               is_array: false
             }
    end
  end
end
